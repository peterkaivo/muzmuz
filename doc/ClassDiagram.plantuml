@startuml
note "<b>TODO:</b> class Accessory (Extension?), class Media" as N1

class Item {
  Long id;
  String inventoryNumber;
  String name;
  String additionalName;
  Category category;
  Photo defaultPhoto;
  ItemStatus status;
  String description;
  String[] labels;
  -- Details --
  Drawing[] drawings;
  Dimension[] dimensions;
  Material[] material;
  Location location;
  Subject owner;
  Conditions currentConditions;
  String comments;
  -- Manufacture --
  Date manufactureDate;
  Subject[] manufacturers;
  -- Acquisition --
  Acquisition acquisition;
  Conditions acquisitionConditions;
  -- Images --
  ImageGallery defaultGallery;
  ImageGallery[] galleries;
  -- Media --
  Audio[] audio;
  Video[] video;
  File[] files;
  Link[] links;
  -- Extensions --
  Extension[] extensions;
  -- Accessories --
  Accessory[] accessories;
}

class Category {
}

enum ItemStatus {
EXPOSED("Vystaveno"),
  DEPOSITED("V depositu"),
  LENT("Zapùjèeno"),
  SOLD("Prodáno"),
  RETURNED("Vráceno"),
  DISCARDED("Vyøazeno"),
  OTHER("Jiný");
}

class Conditions {
  Long id;
  ConditionStatus status;
  Compactness entireness;
  String description;
  String comments;
}

enum ConditionStatus {
  NEW,
  GOOD,
  TRACES_OF_USE,
  LIGHT_DAMAGE,
  MEDIUM_DAMAGE,
  STRONG_DAMAGE,
  FRAGMENTED,
  OTHER;
}

enum Compactness {
  COMPLETE,
  INCOMPLETE,
  PARTIAL,
  OTHER;
}

class Dimension {
  Long id;
  DimensionType type;
  Float value;
  Unit unit;
  String description;
  String comments;
}

enum DimensionType {
  LENGTH,
  WIDTH,
  HEIGHT,
  SCALE,
  DIAMETER,
  THICKNESS,
  ANGLE,
  NECK_LENGTH,
  NECK_WIDTH,
  NECK_HEIGHT,
  BODY_LENGTH,
  BODY_WIDTH,
  BODY_HEIGHT,
  BELL_DIAMETER,
  FROM_DRAWING,
  OTHER;
}

enum Unit {
  MM,
  CM,
  M,
  IN,
  DEG,
  PX,
  UNDEFINED;
}

class Material {
  Long id;
  MaterialCategory category;
  String type;
  String description;
  String comments;
}

enum MaterialCategory {
  WOOD,
  PLYWOOD,
  LAMINATED,
  METAL,
  ALLOY,
  PLASTIC,
  LEATHER,
  GUT,
  PAPER,
  ORGANIC,
  TEXTILE,
  OTHER;
}

class Location {
  Long id;
  String name;
  Address address;
  Photo defaultPhoto;
  ImageGallery defaultGallery;
  ImageGallery[] galleries;
  Audio[] audio;
  Video[] video;
  File[] files;
  Link[] links;
  String description;
  String comments;
}

class Address {
  Long id;
  String street1;
  String street2;
  String city;
  String zip;
  String province;
  String country;
}

abstract class Subject {
  Long id;
  SubjectType subjectType;
  Address address;
  Photo defaultPhoto;
  ImageGallery defaultGallery;
  ImageGallery[] galleries;
  Audio[] audio;
  Video[] video;
  File[] files;
  Link[] links;
  String description;
  String comments;
}

enum SubjectType {
  PERSON,
  COMPANY,
  OTHER;
}

class Person extends Subject {
  SubjectType subjectType = SubjectType.PERSON;
  String firstName;
  String middleName;
  String lastName;
  Date birth;
}

class Company extends Subject {
  SubjectType subjectType = SubjectType.COMPANY;
  String Name;
  Date founded;
}

class Acquisition {
  Long id;
  AcquisitionType acquisitionType;
  Date acquisitionDate;
  Subject acquiredFrom;
  Item[] acquiredItems;
  ImageGallery defaultGallery;
  ImageGallery[] galleries;
  Audio[] audio;
  Video[] video;
  File[] files;
  Link[] links;
  String description;
  String comments;
}

enum AcquisitionType {
  DONATION,
  PURCHASE,
  LOAN,
  OTHER;
}

class ImageGallery {
  Long id;
  String name;
  Graphics[] images;
  String description;
  String comments;
}
note top: ID=0 for photos not (yet) in gallery\nID=1 for schema/draywing photos

abstract class Medium {
  Long id;
  MediaType type;
  String name;
  String fileName;
  String description;
  String comments;
}

enum MediaType {
  FILE,
  DRAWING,
  IMAGE,
  PHOTO,
  AUDIO,
  VIDEO,
  LINK;
}

abstract class Graphics extends Medium {
  Resolution resolution;
  Date acquired;
}

abstract class AudioVisual extends Medium {
  String length;
}

class File extends Medium {
  MediaType type = MediaType.FILE
}

class Link extends Medium {
  MediaType type = MediaType.LINK;
  String url;
}

class Photo extends Graphics {
  MediaType type = MediaType.PHOTO;
}

class Drawing extends Graphics {
  MediaType type = MediaType.DRAWING;
}

class Image extends Graphics {
  MediaType type = MediaType.IMAGE;
}

class Audio extends AudioVisual {
  MediaType type = MediaType.AUDIO;
}

class Video extends AudioVisual {
  MediaType type = MediaType.VIDEO;
  Resolution resolution;
  Date acquired;
}

class Resolution {
  Long id;
  Dimension width;
  Dimension height;
}

abstract class Extension {
  Long id;
  String name;
  String schemaName;
  String description;
  String comments;
  --
  JsonString toJson();
}

class Accessory {
  Long id;
  String inventoryNumber;
  String name;
  String additionalName;
  Photo defaultPhoto;
  ImageGallery defaultGallery;
  ItemStatus status;
  Location location;
  Dimension[] dimensions;
  Material[] material;
  String description;
  String comments;
}

class Strings extends Extension {
  StringInfo[] strings;
  Drawing stringSchema;
}

class StringInfo {
  Long id;
  Integer order;
  String pitch;
  Dimension thickness;
  Material material;
}

Item o-- Category
Item *-- Conditions
Item o-- Subject
Item o-- Acquisition
Item *-- Dimension
Item *-- Material
Item o-- ItemStatus
Item o-- Location
Item o-- Photo
Item o-- Drawing
Item o-- ImageGallery
Item *-- Extension

Conditions o-- ConditionStatus
Conditions o-- Compactness

Acquisition o-- AcquisitionType
Acquisition o-- Subject
Acquisition o-- ImageGallery

Dimension o-- DimensionType
Dimension o-- Unit

Material o-- MaterialCategory

Location o-- Address

Subject *-- SubjectType
Subject o-- Address
Subject o-- Photo
Subject o-- ImageGallery
Person o-- Company
Company o-- Person

Medium o-- MediaType
Graphics *-- Resolution
ImageGallery o-- Graphics

Resolution *-- Dimension

Strings *-- StringInfo
Strings o-- Drawing
StringInfo *-- Dimension
StringInfo *-- Material
@enduml
